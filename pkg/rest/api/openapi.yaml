openapi: 3.1.0
info:
  description: |
    # Introduction
    This API is documented in **OpenAPI 3.0 format**.

    This API the following operations:
    * Retrieve a list of available instruments
    * Retrieve a list of executed trades

    # Basics
    * API calls have to be secured with HTTPS.
    * All data has to be submitted UTF-8 encoded.
    * The reply is sent JSON encoded.
  title: OPEN OUTCRY API
  version: 1.0.0
servers:
- url: http://localhost:4000
security:
- basicAuth: []
paths:
  /currencies:
    get:
      description: Returns list of available currencies
      operationId: getCurrencies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyList'
          description: currencies list
        "500":
          description: Error
      summary: currencies list
      tags:
      - currencies
  /instruments:
    get:
      description: Returns list of available instruments
      operationId: getInstruments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentList'
          description: instruments list
        "500":
          description: Error
      summary: instrument list
      tags:
      - instruments
  /order_books/{instrument_name}:
    get:
      description: Return an order book for an instrument
      operationId: getOrderBook
      parameters:
      - explode: false
        in: path
        name: instrument_name
        required: true
        schema:
          $ref: '#/components/schemas/InstrumentName'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderBook'
          description: order book
        "500":
          description: Error
      summary: get order books
      tags:
      - order_books
  /trades:
    get:
      description: Returns list of user's trades
      operationId: getTrades
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeList'
          description: trades list
        "500":
          description: Error
      summary: trades list
      tags:
      - trades
  /trade_orders:
    get:
      description: Returns list of user's active trade orders
      operationId: getTradeOrders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeOrderList'
          description: trades orders list
        "500":
          description: Error
      summary: trade order list
      tags:
      - trade_order
components:
  schemas:
    CurrencyName:
      description: ISO 4217 Currency symbol
      example: USD
    Currency:
      description: Currency of payment account
      properties:
        name:
          description: ISO 4217 Currency symbol
          example: USD
        precision:
          description: Currency precision as number of decimal points
          example: 2
    CurrencyList:
      description: List of currencies supported by app
      items:
        $ref: '#/components/schemas/Currency'
    Id:
      format: uuid
    InstrumentName:
      description: "Ticker-like name of the instrument. For monetary instruments,\
        \ a currency pair is used."
    Instrument:
      properties:
        id:
          format: uuid
        name:
          description: "Ticker-like name of the instrument. For monetary instruments,\
            \ a currency pair is used."
        base_currency:
          description: ISO 4217 Currency symbol
          example: USD
        quote_currency:
          description: ISO 4217 Currency symbol
          example: USD
        enabled:
          description: Availability for trading
    InstrumentList:
      items:
        $ref: '#/components/schemas/Instrument'
    PriceVolume:
      properties:
        price: {}
        volume: {}
    OrderBook:
      example:
        sell: ""
        buy: ""
      properties:
        sell:
          items:
            $ref: '#/components/schemas/PriceVolume'
        buy:
          items:
            $ref: '#/components/schemas/PriceVolume'
    Trade:
      description: Execute trade
      properties:
        id:
          format: uuid
    TradeList:
      description: List of executed trades
      items:
        $ref: '#/components/schemas/Trade'
    TradeOrderSide:
      enum:
      - SELL
      - BUY
    TradeOrderTimeInForce:
      enum:
      - GTC
      - IOC
      - FOK
      - GTD
      - GTT
    TradeOrderStatus:
      enum:
      - OPEN
      - REJECTED
      - CANCELLED
    TradeOrder:
      properties:
        id:
          format: uuid
        instrument:
          description: "Ticker-like name of the instrument. For monetary instruments,\
            \ a currency pair is used."
        side:
          $ref: '#/components/schemas/TradeOrderSide'
        timeInForce:
          $ref: '#/components/schemas/TradeOrderTimeInForce'
        status:
          $ref: '#/components/schemas/TradeOrderStatus'
    TradeOrderList:
      items:
        $ref: '#/components/schemas/TradeOrder'
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
