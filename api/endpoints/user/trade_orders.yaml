get:
  tags:
    - user
  summary: Get trade orders
  description: Returns list of user's trade orders
  operationId: getTradeOrders
  parameters:
    - $ref: "../../models/trading_account.yaml#/components/parameters/TradingAccountId"

  responses:
    "200":
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../models/trade_order.yaml#/components/schemas/TradeOrderList"
    "404":
      description: Error

post:
  tags:
    - user
  summary: Create trade order
  description: Creates a trade order
  operationId: createTrade
  parameters:
    - $ref: "../../models/trading_account.yaml#/components/parameters/TradingAccountId"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            instrument:
              $ref: "../../models/instrument.yaml#/components/schemas/InstrumentName"
            side:
              $ref: "../../models/trade_order.yaml#/components/schemas/TradeOrderSide"
            type:
              $ref: "../../models/trade_order.yaml#/components/schemas/TradeOrderType"
            timeInForce:
              $ref: "../../models/trade_order.yaml#/components/schemas/TradeOrderTimeInForce"
            amount:
              $ref: "../../models/shared.yaml#/components/schemas/MoneyAmount"
            price:
              $ref: "../../models/shared.yaml#/components/schemas/MoneyAmount"
          required:
            - instrument
            - side
            - type
            - timeInForce
            - amount
        example:
          instrument: "BTC-EUR"
          side: "SELL"
          type: "LIMIT"
          timeInForce: "GTC"
          amount: "100"
          price: "100.00"

  responses:
    "200":
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../models/trade_order.yaml#/components/schemas/TradeOrder"
    "404":
      description: Error
